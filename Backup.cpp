/*****************************************************************/
/*                                                               */
/*   CASIO fx-9860G SDK Library                                  */
/*                                                               */
/*   File name : Hex.cpp                                         */
/*                                                               */
/*   Copyright (c) 2006 CASIO COMPUTER CO., LTD.                 */
/*                                                               */
/*****************************************************************/

extern "C" {
    #include "fxlib.h"
};

#include "MonochromeLib.h"

void scrollUp(const unsigned char *src, unsigned char *bmp, size_t &scroll){
	if (scroll > 0){
		unsigned char temp[1024] = {0};

		for (size_t i = 0; i < 63; ++i){
			for (size_t j = 0; j < 16; ++j){
				if (i > 0){
					temp[j + 16*i] = bmp[j + 16*(i - 1)];
				} else {
					temp[j] = src[j + scroll*16];
				}

			}
		}

		for (size_t i = 0; i < 1024; ++i)
			bmp[i] = temp[i];

			scroll--;
	}
}

void scrollDown(const unsigned char *src, unsigned char *bmp, size_t &scroll){
	if (scroll+64 < 128){
		unsigned char temp[1024] = {0};

		for (size_t i = 0; i < 63; ++i){
			for (size_t j = 0; j < 16; ++j){
				if (i < 62){
					temp[j + 16*i] = bmp[j + 16*(i + 1)];
				} else {
					temp[j + 16*i] = src[j + (scroll+64)*16];
				}

			}
		}

		for (size_t i = 0; i < 1024; ++i)
			bmp[i] = temp[i];

		scroll++;
	}
}

int main(){

    const unsigned char map_example[]={
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 63, 192, 0, 15, 240, 0, 3, 252, 0, 0, 0, 0, 
        0, 0, 0, 0, 127, 224, 0, 31, 248, 0, 7, 254, 0, 0, 0, 0, 
        0, 0, 0, 0, 255, 240, 0, 63, 252, 0, 15, 255, 0, 0, 0, 0, 
        0, 0, 0, 1, 255, 248, 0, 127, 254, 0, 31, 255, 128, 0, 0, 0, 
        0, 0, 0, 3, 255, 252, 0, 255, 255, 0, 63, 255, 192, 0, 0, 0, 
        0, 0, 0, 7, 255, 254, 1, 255, 255, 128, 127, 255, 224, 0, 0, 0, 
        0, 0, 0, 7, 255, 255, 255, 255, 255, 255, 255, 255, 224, 0, 0, 0, 
        0, 0, 0, 7, 255, 254, 1, 255, 255, 128, 127, 255, 224, 0, 0, 0, 
        0, 0, 0, 3, 255, 252, 0, 255, 255, 0, 63, 255, 192, 0, 0, 0, 
        0, 0, 0, 1, 255, 248, 0, 127, 254, 0, 31, 255, 128, 0, 0, 0, 
        0, 0, 0, 0, 255, 240, 0, 63, 252, 0, 15, 255, 0, 0, 0, 0, 
        0, 0, 0, 0, 127, 224, 0, 31, 248, 0, 7, 254, 0, 0, 0, 0, 
        0, 0, 0, 0, 63, 192, 0, 15, 240, 0, 3, 252, 0, 0, 0, 0, 
        0, 0, 0, 0, 64, 32, 0, 16, 8, 0, 4, 2, 0, 0, 0, 0, 
        0, 0, 0, 0, 128, 16, 0, 32, 4, 0, 8, 1, 0, 0, 0, 0, 
        0, 0, 0, 1, 0, 8, 0, 64, 2, 0, 16, 0, 128, 0, 0, 0, 
        0, 0, 0, 2, 0, 4, 0, 128, 1, 0, 32, 0, 64, 0, 0, 0, 
        0, 0, 0, 4, 0, 2, 1, 0, 0, 128, 64, 0, 32, 0, 0, 0, 
        0, 0, 7, 248, 0, 1, 254, 0, 0, 127, 128, 0, 31, 224, 0, 0, 
        0, 0, 15, 252, 0, 3, 255, 0, 0, 255, 192, 0, 63, 240, 0, 0, 
        0, 0, 31, 254, 0, 7, 255, 128, 1, 255, 224, 0, 127, 248, 0, 0, 
        0, 0, 63, 255, 0, 15, 255, 192, 3, 255, 240, 0, 255, 252, 0, 0, 
        0, 0, 127, 255, 128, 31, 255, 224, 7, 255, 248, 1, 255, 254, 0, 0, 
        0, 0, 255, 255, 192, 63, 255, 240, 15, 255, 252, 3, 255, 255, 0, 0, 
        0, 1, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 128, 0, 
        0, 0, 255, 255, 192, 63, 255, 240, 15, 255, 252, 3, 255, 255, 0, 0, 
        0, 0, 127, 255, 128, 31, 255, 224, 7, 255, 248, 1, 255, 254, 0, 0, 
        0, 0, 63, 255, 0, 15, 255, 192, 3, 255, 240, 0, 255, 252, 0, 0, 
        0, 0, 31, 254, 0, 7, 255, 128, 1, 255, 224, 0, 127, 248, 0, 0, 
        0, 0, 15, 252, 0, 3, 255, 0, 0, 255, 192, 0, 63, 240, 0, 0, 
        0, 0, 7, 248, 0, 1, 254, 0, 0, 127, 128, 0, 31, 224, 0, 0, 
        0, 0, 8, 4, 0, 2, 0, 0, 0, 0, 64, 0, 32, 16, 0, 0, 
        0, 0, 16, 2, 0, 4, 0, 0, 0, 0, 32, 0, 64, 8, 0, 0, 
        0, 0, 32, 1, 0, 8, 0, 0, 0, 0, 16, 0, 128, 4, 0, 0, 
        0, 0, 64, 0, 128, 16, 0, 0, 0, 0, 8, 1, 0, 2, 0, 0, 
        0, 0, 128, 0, 64, 32, 0, 0, 0, 0, 4, 2, 0, 1, 0, 0, 
        0, 255, 0, 0, 63, 192, 0, 0, 0, 0, 3, 252, 0, 0, 255, 0, 
        1, 255, 128, 0, 127, 224, 0, 0, 0, 0, 7, 254, 0, 1, 255, 128, 
        3, 255, 192, 0, 255, 240, 0, 0, 0, 0, 15, 255, 0, 3, 255, 192, 
        7, 255, 224, 1, 255, 248, 0, 0, 0, 0, 31, 255, 128, 7, 255, 224, 
        15, 255, 240, 3, 255, 252, 0, 0, 0, 0, 63, 255, 192, 15, 255, 240, 
        31, 255, 248, 7, 255, 254, 0, 0, 0, 0, 127, 255, 224, 31, 255, 248, 
        63, 255, 255, 255, 255, 254, 0, 0, 0, 0, 127, 255, 255, 255, 255, 252, 
        31, 255, 248, 7, 255, 254, 0, 0, 0, 0, 127, 255, 224, 31, 255, 248, 
        15, 255, 240, 3, 255, 252, 0, 0, 0, 0, 63, 255, 192, 15, 255, 240, 
        7, 255, 224, 1, 255, 248, 0, 0, 0, 0, 31, 255, 128, 7, 255, 224, 
        3, 255, 192, 0, 255, 240, 0, 0, 0, 0, 15, 255, 0, 3, 255, 192, 
        1, 255, 128, 0, 127, 224, 0, 0, 0, 0, 7, 254, 0, 1, 255, 128, 
        0, 255, 0, 0, 63, 192, 0, 0, 0, 0, 3, 252, 0, 0, 255, 0, 
        0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 1, 254, 0, 0, 127, 128, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 3, 255, 0, 0, 255, 192, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 7, 255, 128, 1, 255, 224, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 15, 255, 192, 3, 255, 240, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 31, 255, 224, 7, 255, 248, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 63, 255, 240, 15, 255, 252, 0, 0, 0, 0, 0, 
        //
        0, 0, 0, 0, 0, 63, 255, 255, 255, 255, 252, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 63, 255, 240, 15, 255, 252, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 31, 255, 224, 7, 255, 248, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 15, 255, 192, 3, 255, 240, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 7, 255, 128, 1, 255, 224, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 3, 255, 0, 0, 255, 192, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 1, 254, 0, 0, 127, 128, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 
        0, 255, 0, 0, 63, 192, 0, 0, 0, 0, 3, 252, 0, 0, 255, 0, 
        1, 255, 128, 0, 127, 224, 0, 0, 0, 0, 7, 254, 0, 1, 255, 128, 
        3, 255, 192, 0, 255, 240, 0, 0, 0, 0, 15, 255, 0, 3, 255, 192, 
        7, 255, 224, 1, 255, 248, 0, 0, 0, 0, 31, 255, 128, 7, 255, 224, 
        15, 255, 240, 3, 255, 252, 0, 0, 0, 0, 63, 255, 192, 15, 255, 240, 
        31, 255, 248, 7, 255, 254, 0, 0, 0, 0, 127, 255, 224, 31, 255, 248, 
        63, 255, 255, 255, 255, 254, 0, 0, 0, 0, 127, 255, 255, 255, 255, 252, 
        31, 255, 248, 7, 255, 254, 0, 0, 0, 0, 127, 255, 224, 31, 255, 248, 
        15, 255, 240, 3, 255, 252, 0, 0, 0, 0, 63, 255, 192, 15, 255, 240, 
        7, 255, 224, 1, 255, 248, 0, 0, 0, 0, 31, 255, 128, 7, 255, 224, 
        3, 255, 192, 0, 255, 240, 0, 0, 0, 0, 15, 255, 0, 3, 255, 192, 
        1, 255, 128, 0, 127, 224, 0, 0, 0, 0, 7, 254, 0, 1, 255, 128, 
        0, 255, 0, 0, 63, 192, 0, 0, 0, 0, 3, 252, 0, 0, 255, 0, 
        0, 0, 128, 0, 64, 32, 0, 0, 0, 0, 4, 2, 0, 1, 0, 0, 
        0, 0, 64, 0, 128, 16, 0, 0, 0, 0, 8, 1, 0, 2, 0, 0, 
        0, 0, 32, 1, 0, 8, 0, 0, 0, 0, 16, 0, 128, 4, 0, 0, 
        0, 0, 16, 2, 0, 4, 0, 0, 0, 0, 32, 0, 64, 8, 0, 0, 
        0, 0, 8, 4, 0, 2, 0, 0, 0, 0, 64, 0, 32, 16, 0, 0, 
        0, 0, 7, 248, 0, 1, 254, 0, 0, 127, 128, 0, 31, 224, 0, 0, 
        0, 0, 15, 252, 0, 3, 255, 0, 0, 255, 192, 0, 63, 240, 0, 0, 
        0, 0, 31, 254, 0, 7, 255, 128, 1, 255, 224, 0, 127, 248, 0, 0, 
        0, 0, 63, 255, 0, 15, 255, 192, 3, 255, 240, 0, 255, 252, 0, 0, 
        0, 0, 127, 255, 128, 31, 255, 224, 7, 255, 248, 1, 255, 254, 0, 0, 
        0, 0, 255, 255, 192, 63, 255, 240, 15, 255, 252, 3, 255, 255, 0, 0, 
        0, 1, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 128, 0, 
        0, 0, 255, 255, 192, 63, 255, 240, 15, 255, 252, 3, 255, 255, 0, 0, 
        0, 0, 127, 255, 128, 31, 255, 224, 7, 255, 248, 1, 255, 254, 0, 0, 
        0, 0, 63, 255, 0, 15, 255, 192, 3, 255, 240, 0, 255, 252, 0, 0, 
        0, 0, 31, 254, 0, 7, 255, 128, 1, 255, 224, 0, 127, 248, 0, 0, 
        0, 0, 15, 252, 0, 3, 255, 0, 0, 255, 192, 0, 63, 240, 0, 0, 
        0, 0, 7, 248, 0, 1, 254, 0, 0, 127, 128, 0, 31, 224, 0, 0, 
        0, 0, 0, 4, 0, 2, 1, 0, 0, 128, 64, 0, 32, 0, 0, 0, 
        0, 0, 0, 2, 0, 4, 0, 128, 1, 0, 32, 0, 64, 0, 0, 0, 
        0, 0, 0, 1, 0, 8, 0, 64, 2, 0, 16, 0, 128, 0, 0, 0, 
        0, 0, 0, 0, 128, 16, 0, 32, 4, 0, 8, 1, 0, 0, 0, 0, 
        0, 0, 0, 0, 64, 32, 0, 16, 8, 0, 4, 2, 0, 0, 0, 0, 
        0, 0, 0, 0, 63, 192, 0, 15, 240, 0, 3, 252, 0, 0, 0, 0, 
        0, 0, 0, 0, 127, 224, 0, 31, 248, 0, 7, 254, 0, 0, 0, 0, 
        0, 0, 0, 0, 255, 240, 0, 63, 252, 0, 15, 255, 0, 0, 0, 0, 
        0, 0, 0, 1, 255, 248, 0, 127, 254, 0, 31, 255, 128, 0, 0, 0, 
        0, 0, 0, 3, 255, 252, 0, 255, 255, 0, 63, 255, 192, 0, 0, 0, 
        0, 0, 0, 7, 255, 254, 1, 255, 255, 128, 127, 255, 224, 0, 0, 0, 
        0, 0, 0, 7, 255, 255, 255, 255, 255, 255, 255, 255, 224, 0, 0, 0, 
        0, 0, 0, 7, 255, 254, 1, 255, 255, 128, 127, 255, 224, 0, 0, 0, 
        0, 0, 0, 3, 255, 252, 0, 255, 255, 0, 63, 255, 192, 0, 0, 0, 
        0, 0, 0, 1, 255, 248, 0, 127, 254, 0, 31, 255, 128, 0, 0, 0, 
        0, 0, 0, 0, 255, 240, 0, 63, 252, 0, 15, 255, 0, 0, 0, 0, 
        0, 0, 0, 0, 127, 224, 0, 31, 248, 0, 7, 254, 0, 0, 0, 0, 
        0, 0, 0, 0, 63, 192, 0, 15, 240, 0, 3, 252, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
        //
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    };

    unsigned char bitmap[1024] = {0};

    size_t scroll = 0;

    for (size_t i = 0; i < 1024; ++i)
    	bitmap[i] = map_example[i];

    while (!IsKeyDown(KEY_CTRL_EXIT)){
        if (IsKeyDown(KEY_CTRL_DOWN))
        	scrollDown(map_example, bitmap, scroll);
        else if (IsKeyDown(KEY_CTRL_UP))
            scrollUp(map_example, bitmap, scroll);
		
		ML_clear_vram();
        	ML_bmp_or_cl(bitmap, 0, 0, 128, 128);
        ML_display_vram();
    }

    return 1;
}

extern "C" {
    int AddIn_main(int isAppli, unsigned short OptionNum){
        return main();
    }

    #pragma section _BR_Size
    unsigned long BR_Size;
    #pragma section

    #pragma section _TOP

    int InitializeSystem(int isAppli, unsigned short OptionNum){
        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
    }

    #pragma section
};